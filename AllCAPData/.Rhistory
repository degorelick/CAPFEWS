#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/Data') # set directory
setwd('C:\Users\rkleiman\OneDrive - University of North Carolina at Chapel Hill\CAP\CAPFEWS\AllCAPData') # set directory
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/Data') # set directory
setwd('C:/Users/rkleiman/OneDrive - University of North Carolina at Chapel Hill/CAP/CAPFEWS/AllCAPData') # set directory
### -----------------------------------------------------
##  Exploring CAP Financial and Water/Power Forecast Data
##    D. Gorelick (Mar 2022)
##  Stored in degorelick/CAP repository on GitHub
### -----------------------------------------------------
rm(list=ls()) # clear memory
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/Data') # set directory
setwd('C:/Users/rkleiman/OneDrive - University of North Carolina at Chapel Hill/CAP/CAPFEWS/AllCAPData') # set directory
library(tidyverse)
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL request_2021_rk.xlsx", sheet = "GF P&L")
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "GF P&L")
"C:\Users\rkleiman\OneDrive - University of North Carolina at Chapel Hill\CAP\CAPFEWS\AllCAPData\P&L_RateRecon history_PNNL_request_2021_rk.xlsx"
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "GF P&L")
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "GF P&L")
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "GF P&L")
# remove empty rows and columns, rename FY headers
CAP_annual_historical_finances_profit_loss = CAP_annual_historical_finances_profit_loss %>%
filter(!is.na(...1)) %>%
rename(Variable = ...1) %>%
mutate(Group = NA) %>% filter(row_number() != n())
colnames(CAP_annual_historical_finances_profit_loss)[2:(ncol(CAP_annual_historical_finances_profit_loss)-1)] =
c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021")
### -----------------------------------------------------
##  Read in annual financial data and clean it
CAP_annual_historical_finances_profit_loss = readxl::read_xlsx("P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "GF P&L")
# read data
CAP_annual_historical_finances_reconciliation =
readxl::read_xlsx(path = "P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "OMR Rec",
trim_ws = FALSE)
# read data
CAP_annual_historical_finances_reconciliation =
readxl::read_xlsx(path = "P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "OMR Rec",
trim_ws = FALSE)
# remove empty rows and columns, rename FY headers
CAP_annual_historical_finances_reconciliation_reduced = CAP_annual_historical_finances_reconciliation %>%
select(`Rate Reconciliation`:...11) %>%
filter(!is.na(`Rate Reconciliation`)) %>%
filter(`Rate Reconciliation` != '(Dollars in Thousands)') %>%
rename(Variable = `Rate Reconciliation`,
'2011' = ...2, '2012' = ...3, '2013' = ...4, '2014' = ...5, '2015' = ...6,
'2016' = ...7, '2017' = ...8, '2018' = ...9, '2019' = ...10, '2020' = ...11, '2021' = ...12)
View(CAP_annual_historical_finances_profit_loss)
View(CAP_annual_historical_finances_reconciliation)
# remove empty rows and columns, rename FY headers
CAP_annual_historical_finances_reconciliation_reduced = CAP_annual_historical_finances_reconciliation %>%
select(`Rate Reconciliation`:...12) %>%
filter(!is.na(`Rate Reconciliation`)) %>%
filter(`Rate Reconciliation` != '(Dollars in Thousands)') %>%
rename(Variable = `Rate Reconciliation`,
'2011' = ...2, '2012' = ...3, '2013' = ...4, '2014' = ...5, '2015' = ...6,
'2016' = ...7, '2017' = ...8, '2018' = ...9, '2019' = ...10, '2020' = ...11, '2021' = ...12)
# group variables
CAP_annual_historical_finances_reconciliation_reduced =
CAP_annual_historical_finances_reconciliation_reduced %>% mutate(Group = NA)
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[1]
for (r in 1:nrow(CAP_annual_historical_finances_reconciliation_reduced)) {
if (is.na(CAP_annual_historical_finances_reconciliation_reduced$`2011`[r])) {
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[r]
}
CAP_annual_historical_finances_reconciliation_reduced$Group[r] = row_val
}
# remove original grouping separation rows, format data the same
CAP_annual_historical_finances_reconciliation_reduced_final =
CAP_annual_historical_finances_reconciliation_reduced %>% drop_na('2011') %>%
mutate_if(is.numeric, as.character)
# export for CAPFEWS model input
write.table(CAP_annual_historical_finances_reconciliation_reduced_final,
"CAP_annual_rates_2011_to_2020.csv", row.names = FALSE, col.names = TRUE, sep = ",")
# export for CAPFEWS model input
write.table(CAP_annual_historical_finances_reconciliation_reduced_final,
"CAP_annual_rates_2011_to_2021.csv", row.names = FALSE, col.names = TRUE, sep = ",")
# convert to long format
CAP_Rec_long = CAP_annual_historical_finances_reconciliation_reduced_final %>%
pivot_longer(cols = starts_with('20'), names_to = 'FY', values_to = 'Thousand USD')
# remove empty rows and columns, rename FY headers
CAP_annual_historical_finances_reconciliation_reduced = CAP_annual_historical_finances_reconciliation %>%
select(`Rate Reconciliation`:...12) %>%
filter(!is.na(`Rate Reconciliation`)) %>%
filter(`Rate Reconciliation` != '(Dollars in Thousands)') %>%
rename(Variable = `Rate Reconciliation`,
'2011' = ...2, '2012' = ...3, '2013' = ...4, '2014' = ...5, '2015' = ...6,
'2016' = ...7, '2017' = ...8, '2018' = ...9, '2019' = ...10, '2020' = ...11, '2021' = ...12)
# group variables
CAP_annual_historical_finances_reconciliation_reduced =
CAP_annual_historical_finances_reconciliation_reduced %>% mutate(Group = NA)
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[1]
for (r in 1:nrow(CAP_annual_historical_finances_reconciliation_reduced)) {
if (is.na(CAP_annual_historical_finances_reconciliation_reduced$`2011`[r])) {
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[r]
}
CAP_annual_historical_finances_reconciliation_reduced$Group[r] = row_val
}
# remove original grouping separation rows, format data the same
CAP_annual_historical_finances_reconciliation_reduced_final =
CAP_annual_historical_finances_reconciliation_reduced %>% drop_na('2011') %>%
mutate_if(is.numeric, as.character)
# export for CAPFEWS model input
write.table(CAP_annual_historical_finances_reconciliation_reduced_final,
"CAP_annual_rates_2011_to_2021.csv", row.names = FALSE, col.names = TRUE, sep = ",")
# convert to long format
CAP_Rec_long = CAP_annual_historical_finances_reconciliation_reduced_final %>%
pivot_longer(cols = starts_with('20'), names_to = 'FY', values_to = 'Thousand USD')
##  plot for fun
# individual timeseries for each variable in data
temp = ggplot(data = CAP_Rec_long) +
geom_bar(aes(x = FY, y = as.numeric(`Thousand USD`), fill = Group), stat = "identity", color = NA) +
facet_wrap(Group ~ Variable, scales = "free_y", ncol = 5) + ylab('Units (see panel subtitles)') +
theme(axis.text.x = element_text(angle = 90)) + guides(fill = FALSE)
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separatedflows.png",
dpi = 400, units = "in", height = 10, width = 18)
# grouped by type and shown different ways to demonstrate proportions
# separate water rate, water delivery, and financial categories
subset_to_plot_delivery = CAP_Rec_long %>% filter(grepl('Acre-Feet', Group))
temp = ggplot(data = subset_to_plot_delivery) +
geom_bar(aes(x = FY, y = as.numeric(`Thousand USD`)/1000, fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_grid(Group ~ Variable) + ylab('Deliveries (kAF)') + guides(fill = FALSE) +
xlab('Fiscal Year') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle("CAP Annual Water Deliveries")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separateflows_deliveries.png",
dpi = 400, units = "in", height = 5, width = length(unique(subset_to_plot_delivery$Variable))*3)
## repeat for rates
subset_to_plot_rates = CAP_Rec_long %>% filter(grepl('AF', Group)) %>%
mutate(Variable = gsub(pattern = "Published", replacement = "", x = Variable)) %>%
mutate(Variable = gsub(pattern = " rate", replacement = "", x = Variable)) %>%
mutate(Variable = gsub(pattern = "Total  ", replacement = "", x = Variable)) %>%
mutate(Variable = gsub(pattern = "Total ", replacement = "", x = Variable)) %>%
mutate(Variable = gsub(pattern = "Calculated ", replacement = "", x = Variable)) %>%
mutate(Variable = gsub(pattern = "Published ", replacement = "", x = Variable)) %>%
mutate(Variable = trimws(x = Variable, which = 'both', whitespace = "[ ]")) %>%
mutate(Variable = gsub(pattern = "Fixed OM&R Rate", replacement = "Fixed OM&R", x = Variable))
temp = ggplot(data = subset_to_plot_rates) +
geom_bar(aes(x = FY, y = as.numeric(`Thousand USD`), fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_grid(Variable ~ Group, scales = "free_y") + ylab('Rate ($/AF)') + guides(fill = FALSE) +
xlab('Fiscal Year') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle("CAP Annual Water Rates")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separateflows_rates.png",
dpi = 400, units = "in", width = 8, height = length(unique(subset_to_plot_rates$Variable))*3)
# show stacked contributions to total rate
plotter = subset_to_plot_rates %>%
filter(Variable != "Water Delivery Rate") %>%
filter(Variable != "Fixed OM&R") %>%
filter(Variable != "Pumping Energy Rate")
temp = ggplot(data = plotter) +
geom_bar(aes(x = FY, y = as.numeric(`Thousand USD`), fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_grid(. ~ Group, scales = "free_y") + ylab('Rate ($/AF)') +
guides(fill = guide_legend(title = "Rate Component")) +
xlab('Fiscal Year') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle("Composition of CAP Annual Water Rates")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_cumulativecontribution_rates.png",
dpi = 400, units = "in", width = 8, height = 4)
# widen subset of rate data to determine differences between budgeted and published rates
subset_to_plot_rates_wide = subset_to_plot_rates %>%
pivot_wider(names_from = 'FY', values_from = 'Thousand USD')
difference_set = subset_to_plot_rates_wide %>%
filter(Group != 'Water Delivery Rate ($/AF)') %>% select(`2011`:`2021`) %>%
mutate_if(is.character, as.numeric) -
subset_to_plot_rates_wide %>%
filter(Group == 'Water Delivery Rate ($/AF)') %>% select(`2011`:`2021`) %>%
mutate_if(is.character, as.numeric)
difference_set = difference_set %>%
mutate(Variable = unique(subset_to_plot_rates_wide$Variable), Group = 'Difference')
difference_set_long = difference_set %>% pivot_longer(cols = starts_with('20'), names_to = 'FY', values_to = '$/AF')
plotter = difference_set_long %>%
filter(Variable != "Water Delivery Rate") %>%
filter(Variable != "Fixed OM&R") %>%
filter(Variable != "Pumping Energy Rate")
plotter$Variable[which(plotter$Variable == "Capital Replacement Component (\"Big R\")")] =
"Capital Replacement\nComponent (\"Big R\")"
plotter$Variable[which(plotter$Variable == "Rate Stabilization Component")] =
"Rate Stabilization\nComponent"
temp = ggplot(data = plotter) +
geom_bar(aes(x = FY, y = as.numeric(`$/AF`), fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_grid(Group ~ Variable, drop = TRUE) + ylab('Rate Difference ($/AF)') + guides(fill = FALSE) +
xlab('Fiscal Year') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle(label = "CAP Annual Water Rates - Differences between Budgeted and Published Rates",
subtitle = "(Positive: Published rate higher than budgeted rate)")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separateflows_rates_differences.jpg",
dpi = 800, units = "in", height = 3, width = length(unique(plotter$Variable))*1.5)
## repeat for financial values
subset_to_plot_financial = CAP_Rec_long %>% filter(!grepl('Acre-Feet', Group)) %>% filter(!grepl('AF', Group))
temp = ggplot(data = subset_to_plot_financial) +
geom_bar(aes(x = FY, y = as.numeric(`Thousand USD`)/1000, fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_wrap(Group ~ Variable, scales = "free_y") + ylab('') + guides(fill = FALSE) +
xlab('Fiscal Year') +
scale_y_continuous(labels = scales::dollar_format(prefix="$", suffix = "M")) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle("CAP Annual Financial Actuals")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separateflows_finances.png",
dpi = 400, units = "in", height = 7, width = 18)
# read data
CAP_annual_historical_finances_reconciliation =
readxl::read_xlsx(path = "P&L_RateRecon history_PNNL_request_2021_rk.xlsx", sheet = "OMR Rec",
trim_ws = FALSE)
# remove empty rows and columns, rename FY headers
CAP_annual_historical_finances_reconciliation_reduced = CAP_annual_historical_finances_reconciliation %>%
select(`Rate Reconciliation`:...12) %>%
filter(!is.na(`Rate Reconciliation`)) %>%
filter(`Rate Reconciliation` != '(Dollars in Thousands)') %>%
rename(Variable = `Rate Reconciliation`,
'2011' = ...2, '2012' = ...3, '2013' = ...4, '2014' = ...5, '2015' = ...6,
'2016' = ...7, '2017' = ...8, '2018' = ...9, '2019' = ...10, '2020' = ...11, '2021' = ...12)
# group variables
CAP_annual_historical_finances_reconciliation_reduced =
CAP_annual_historical_finances_reconciliation_reduced %>% mutate(Group = NA)
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[1]
for (r in 1:nrow(CAP_annual_historical_finances_reconciliation_reduced)) {
if (is.na(CAP_annual_historical_finances_reconciliation_reduced$`2011`[r])) {
row_val = CAP_annual_historical_finances_reconciliation_reduced$Variable[r]
}
CAP_annual_historical_finances_reconciliation_reduced$Group[r] = row_val
}
# remove original grouping separation rows, format data the same
CAP_annual_historical_finances_reconciliation_reduced_final =
CAP_annual_historical_finances_reconciliation_reduced %>% drop_na('2011') %>%
mutate_if(is.numeric, as.character)
# export for CAPFEWS model input
write.table(CAP_annual_historical_finances_reconciliation_reduced_final,
"CAP_annual_rates_2011_to_2021.csv", row.names = FALSE, col.names = TRUE, sep = ",")
View(CAP_annual_historical_finances_reconciliation_reduced_final)
View(CAP_annual_historical_finances_reconciliation_reduced_final)
# export for CAPFEWS model input
write.table(CAP_annual_historical_finances_reconciliation_reduced_final,
"CAP_annual_rates_2011_to_2021.csv", row.names = FALSE, col.names = TRUE, sep = ",")
# widen subset of rate data to determine differences between budgeted and published rates
subset_to_plot_rates_wide = subset_to_plot_rates %>%
pivot_wider(names_from = 'FY', values_from = 'Thousand USD')
difference_set = subset_to_plot_rates_wide %>%
filter(Group != 'Water Delivery Rate ($/AF)') %>% select(`2011`:`2021`) %>%
mutate_if(is.character, as.numeric) -
subset_to_plot_rates_wide %>%
filter(Group == 'Water Delivery Rate ($/AF)') %>% select(`2011`:`2021`) %>%
mutate_if(is.character, as.numeric)
difference_set = difference_set %>%
mutate(Variable = unique(subset_to_plot_rates_wide$Variable), Group = 'Difference')
difference_set_long = difference_set %>% pivot_longer(cols = starts_with('20'), names_to = 'FY', values_to = '$/AF')
plotter = difference_set_long %>%
filter(Variable != "Water Delivery Rate") %>%
filter(Variable != "Fixed OM&R") %>%
filter(Variable != "Pumping Energy Rate")
plotter$Variable[which(plotter$Variable == "Capital Replacement Component (\"Big R\")")] =
"Capital Replacement\nComponent (\"Big R\")"
plotter$Variable[which(plotter$Variable == "Rate Stabilization Component")] =
"Rate Stabilization\nComponent"
temp = ggplot(data = plotter) +
geom_bar(aes(x = FY, y = as.numeric(`$/AF`), fill = Variable),
stat = "identity", position = "stack", size = 1, color = NA) +
facet_grid(Group ~ Variable, drop = TRUE) + ylab('Rate Difference ($/AF)') + guides(fill = FALSE) +
xlab('Fiscal Year') +
theme(axis.text.x = element_text(angle = 90, vjust = 0.3), axis.ticks.x = element_blank()) +
ggtitle(label = "CAP Annual Water Rates - Differences between Actual and Published Rates",
subtitle = "(Positive: Published rate higher than Actual rate)")
ggsave("visualization/CAP_reconciliation_fiscal_trends_2011_to_2021_separateflows_rates_differences.jpg",
dpi = 800, units = "in", height = 3, width = length(unique(plotter$Variable))*1.5)
