setwd('Users/summerstarr')
setwd('Users/summerstarr/PycharmProjects')
getwd
getwd()
setwd('/Users/summerstarr/PycharmProjects')
setwd('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-1')
paste('hi',1)
paste(hi,1)
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss))
crss=1
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss))
paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss)
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,''))
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,sep=""))
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,results_folder,sep=""))
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,results_folder,sep=""))
paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,results_folder,sep="")
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### -----------------------------------------------------
##  Explore CAPFEWS Results
##    D. Gorelick (Nov 2022)
##  To be stored in degorelick/CAPFEWS repository on GitHub
### -----------------------------------------------------
rm(list=ls()) # clear memory
crss=1
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
install.packages("BiocManager")
BiocManager::install("rhdf5")
### -----------------------------------------------------
##  Explore CAPFEWS Results
##    D. Gorelick (Nov 2022)
##  To be stored in degorelick/CAPFEWS repository on GitHub
### -----------------------------------------------------
rm(list=ls()) # clear memory
crss=1
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
### export some plots --------------------------------------------------------
# need results file, read in as "CO" dataframe, from previous section
library(tidyverse)
setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/CAPFEWS/results') # set directory
### -----------------------------------------------------
##  Explore CAPFEWS Results
##    D. Gorelick (Nov 2022)
##  To be stored in degorelick/CAPFEWS repository on GitHub
### -----------------------------------------------------
rm(list=ls()) # clear memory
crss=1
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
### export some plots --------------------------------------------------------
# need results file, read in as "CO" dataframe, from previous section
library(tidyverse)
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/CAPFEWS/results') # set directory
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/CAPFEWS/results_crss') # set directory
CO = read.csv("results.csv", header = TRUE)
entitlement_totals = read.csv("C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/Data/user_entitlements.csv", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/data/user_entitlements.csv", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/data/user_entitlements.xslx", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/data/user_entitlements.xlsx", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/calfews_src/data/user_entitlements.xlsx", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/calfews_src/data/user_entitlements.csv", header = TRUE)
subcontractor_names = sub("_dailydemand", "", colnames(CO)[grep("dailydemand", colnames(CO))])
subcontractor_codes = entitlement_totals$Code
subcontractor_proper_names = entitlement_totals$User
### -----------------------------------------------------
##  Explore CAPFEWS Results
##    D. Gorelick (Nov 2022)
##  To be stored in degorelick/CAPFEWS repository on GitHub
### -----------------------------------------------------
rm(list=ls()) # clear memory
crss=1
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
### export some plots --------------------------------------------------------
# need results file, read in as "CO" dataframe, from previous section
library(tidyverse)
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/CAPFEWS/results') # set directory
#setwd('C:/Users/dgorelic/OneDrive - University of North Carolina at Chapel Hill/UNC/Research/IM3/CAP/CAPFEWS/results_crss') # set directory
CO = read.csv("results.csv", header = TRUE)
entitlement_totals = read.csv("/Users/summerstarr/PycharmProjects/CAPFEWS/calfews_src/data/user_entitlements.csv", header = TRUE)
subcontractor_names = sub("_dailydemand", "", colnames(CO)[grep("dailydemand", colnames(CO))])
subcontractor_codes = entitlement_totals$Code
subcontractor_proper_names = entitlement_totals$User
subcontractor_sectors = c("Tribal", "M&I", "Recharge", "Agri.", "M&I", "Recharge", "Agri.", "M&I",
"M&I", "Tribal", "M&I", "M&I", "M&I", "Tribal", "Agri.", "Agri.",
"M&I", "Agri.", "Agri.", "M&I", "M&I", "M&I", "M&I", "Tribal",
"M&I", "Tribal", "M&I", "M&I", "Tribal", "M&I", "Tribal")
### collect and plot subcontractor demands ---------------------------------
for (name in subcontractor_names) {
data = CO[,grep(name, colnames(CO))]
# organize delivery requests over actual deliveries (by priority class)
colnames(data) = sub(paste(name, "_", sep = ""), "", colnames(data))
colnames(data)[1] = "Demand (kAF)"; colnames(data)[3] = "Curtailment"
data_to_plot = data %>% select(`Demand (kAF)`, PTR, MUI, FED, NIA, EXCESS, Curtailment) %>% mutate(Month = c(1:nrow(data)))
request = data_to_plot %>% select(Month, `Demand (kAF)`)
deliveries = data_to_plot %>% select(Month, PTR, MUI, FED, NIA, EXCESS, Curtailment) %>%
pivot_longer(cols = c(PTR, MUI, FED, NIA, EXCESS, Curtailment))
# plot
to_show = ggplot() + ggtitle(paste(subcontractor_proper_names[which(subcontractor_names == name)], "Demands (2013-2021)", sep = " ")) +
geom_line(data = request, aes(x = Month, y = `Demand (kAF)`), color = "black", size = 1.5) +
geom_bar(data = deliveries, aes(x = Month, y = value, fill = name), stat = "identity", position = "stack", color = NA) +
scale_fill_manual(values = c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + ylab("Delivery Request (kAF)")
ggsave(plot = to_show, filename = paste(name, "demand.png", sep = "_"), units = "in", width = 8, height = 5, dpi = 600)
}
### collect curtailment data for plotting alone ---------------------------------
Curtailment = CO[,grep("request_curtailment", colnames(CO))]
which_initial = colnames(Curtailment)[grep("initial", colnames(Curtailment))]
Curtailment = Curtailment %>% select(-which_initial)
colnames(Curtailment) = subcontractor_proper_names
Curtailment = Curtailment %>% mutate(Month = c(1:nrow(CO))) %>%
mutate_all(~na_if(., 0)) %>% select_if(colSums(!is.na(.)) > 0)
rlang::last_error()
rm(list=ls()) # clear memory
crss=6
results_folder = 'power_test'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
rm(list=ls()) # clear memory
crss=1
results_folder = 'fulls_PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
rm(list=ls()) # clear memory
crss=1
results_folder = 'full_PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
rm(list=ls()) # clear memory
crss=1
results_folder = 'full PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
rm(list=ls()) # clear memory
crss=6
results_folder = 'full PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
rm(list=ls()) # clear memory
crss=16
results_folder = 'full PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
rm(list=ls()) # clear memory
crss=13
results_folder = 'full PPAS'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
runs <- list(1,6,13,16)
for (crss in runs) {
results_folder = '10.2MW_solar_PPA'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
}
rm(list=ls()) # clear memory
runs <- list(1,6,13,16)
for (crss in runs) {
results_folder = '52.2MW_solar_PPA'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
}
rm(list=ls()) # clear memory
runs <- list(1,6,13,16)
for (crss in runs) {
results_folder = '52.5MW_solar_PPA'
setwd(paste('/Users/summerstarr/PycharmProjects/CAPFEWS/results/crss-',crss,'/',results_folder,sep=""))
### read output from hdf5 file ------------------------------------------------
# to do this, run: install.packages("BiocManager")
# then run: BiocManager::install("rhdf5")
library(rhdf5)
CAPFEWS_colnames = c()
CAPFEWS_names = h5readAttributes("results.hdf5", name = "s", native = TRUE)
for (item in names(CAPFEWS_names)) {
if (grepl("column", item, fixed = TRUE)) {
CAPFEWS_colnames = c(CAPFEWS_colnames, CAPFEWS_names[[item]])
}
}
h5closeAll()
CAPFEWS_output = H5Fopen("results.hdf5", native = TRUE)
CO = as.data.frame(CAPFEWS_output$s)
colnames(CO) = CAPFEWS_colnames
CO$month_of_simulation = c(1:nrow(CO))
h5closeAll() # DO THIS OR CAPFEWS WONT OUTPUT DATA ON NEXT RUN
# export as csv
write.table(CO, "results.csv", sep = ",", row.names = FALSE, col.names = TRUE)
}
