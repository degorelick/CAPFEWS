/* Generated by Cython 0.29.21 */

#ifndef __PYX_HAVE__calfews_src__contract_cy
#define __PYX_HAVE__calfews_src__contract_cy

#include "Python.h"
struct Contract_object;

/* "calfews_src/contract_cy.pxd":1
 * cdef public class Contract()[object Contract_object, type Contract_type]:             # <<<<<<<<<<<<<<
 * 
 *   cdef:
 */
struct Contract_object {
  PyObject_HEAD
  double total;
  double maxForecastValue;
  double carryover;
  double daily_deliveries;
  double tot_carryover;
  double running_carryover;
  double projected_carryover;
  double max_allocation;
  double tot_new_alloc;
  double lastYearForecast;
  int allocation_priority;
  int storage_priority;
  int iter_count;
  PyObject *key;
  PyObject *name;
  PyObject *type;
  PyObject *allocation;
  PyObject *storage_pool;
  PyObject *available_water;
  PyObject *annual_deliveries;
  PyObject *flood_deliveries;
  PyObject *contractors;
  PyObject *reduction;
  PyObject *daily_supplies;
};

#ifndef __PYX_HAVE_API__calfews_src__contract_cy

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) Contract_type;

#endif /* !__PYX_HAVE_API__calfews_src__contract_cy */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initcontract_cy(void);
#else
PyMODINIT_FUNC PyInit_contract_cy(void);
#endif

#endif /* !__PYX_HAVE__calfews_src__contract_cy */
